<!--
    Copyright (C) 1999-2015. Christian Heller.

    This knowledge model uses the Cybernetics Oriented Language (CYBOL).

    CYBOL is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published
    by the Free Software Foundation, either version 3 of the License,
    or (at your option) any later version.

    CYBOL is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CYBOL. If not, see <http://www.gnu.org/licenses/>.

    Cybernetics Oriented Programming (CYBOP) <http://www.cybop.org/>
    CYBOP Developers <cybop-developers@nongnu.org>

    @version CYBOP 0.17.0 2015-04-20
    @author Christian Heller <christian.heller@tuxtax.de>
-->

<!--
    This example uses a small domain model that contains three integer values,
    which are needed for the addition operation.
    The domain model resides externally, in an own cybol file.
    It gets created and added to the runtime knowledge tree automatically,
    when using the "receive" operation and specifying "text/cybol" as data format.
    Then follows the addition and result printing on screen.
-->

<node>
    <!-- Create node for domain data Holder -->
    <node name="create_domain" channel="inline" format="memorise/create" model="">
        <node name="name" channel="inline" format="text/plain" model="domain"/>
        <node name="format" channel="inline" format="meta/format" model="element/part"/>
        <node name="element" channel="inline" format="text/plain" model="part"/>
    </node>
    <!-- Load Domain Data -->
    <node name="initialise_domain" channel="inline" format="communicate/receive" model="">
        <node name="channel" channel="inline" format="meta/channel" model="file"/>
        <node name="encoding" channel="inline" format="meta/encoding" model="utf-8"/>
        <node name="language" channel="inline" format="meta/language" model="text/cybol"/>
        <!-- CAUTION! The format HAS TO BE of type "meta/format". The cybol mime type is of interest, not the cyboi-internal runtime type. -->
        <node name="format" channel="inline" format="meta/format" model="element/part"/>
        <!-- CAUTION! The message HAS TO BE of type "text/plain". It gets converted using the "type" property. -->
        <node name="sender" channel="inline" format="text/plain" model="Model/domain.cybol"/>
        <node name="message" channel="inline" format="path/knowledge" model=".domain"/>
    </node>
    <!-- DEBUG - INFOS : Write knowledge tree into file. -->
    <node name="test_knowledge_tree_1" channel="inline" format="communicate/send" model="">
        <node name="channel" channel="inline" format="meta/channel" model="file"/>
        <node name="encoding" channel="inline" format="meta/encoding" model="utf-8"/>
        <node name="language" channel="inline" format="meta/language" model="text/model-diagram"/>
        <node name="format" channel="inline" format="meta/format" model="element/part"/>
        <node name="message" channel="inline" format="path/knowledge" model=".domain"/>
        <node name="receiver" channel="inline" format="text/plain" model="Debug/TEST_ADDITION_STATIC_PRE.txt"/>
    </node>
    <!-- Operation -->
    <node name="add_operand" channel="inline" format="calculate/multiply" model="">
        <node name="result" channel="inline" format="path/knowledge" model=".domain.sum"/>
        <node name="operand" channel="inline" format="path/knowledge" model=".domain.summand"/>
        <node name="type" channel="inline" format="meta/type" model="number/integer"/>
    </node>
    <!-- DEBUG - INFOS : Write knowledge tree into file. -->
    <node name="test_knowledge_tree_2" channel="inline" format="communicate/send" model="">
        <node name="channel" channel="inline" format="meta/channel" model="file"/>
        <node name="encoding" channel="inline" format="meta/encoding" model="utf-8"/>
        <node name="language" channel="inline" format="meta/language" model="text/model-diagram"/>
        <node name="format" channel="inline" format="meta/format" model="element/part"/>
        <node name="message" channel="inline" format="path/knowledge" model=".domain"/>
        <node name="receiver" channel="inline" format="text/plain" model="Debug/TEST_ADDITION_STATIC_POST.txt"/>
    </node>
    <!-- Start Terminal -->
    <node name="startup_terminal" channel="inline" format="maintain/startup" model="">
        <node name="channel" channel="inline" format="meta/channel" model="terminal"/>
    </node>
    <!-- Print Values -->
    <node name="print_result" channel="inline" format="communicate/send" model="">
        <node name="channel" channel="inline" format="meta/channel" model="terminal"/>
        <node name="encoding" channel="inline" format="meta/encoding" model="utf-8"/>
        <node name="language" channel="inline" format="meta/language" model="message/cli"/>
        <node name="format" channel="inline" format="meta/format" model="number/integer"/>
        <node name="message" channel="inline" format="path/knowledge" model=".domain.sum"/>
        <node name="newline" channel="inline" format="logicvalue/boolean" model="true"/>
    </node>
    <!-- Exit Program -->
    <node name="exit_application" channel="inline" format="live/exit" model=""/>
</node>
